package br.com.dextra.loja;

import javax.ws.rs.client.Client;
import javax.ws.rs.client.ClientBuilder;
import javax.ws.rs.client.Entity;
import javax.ws.rs.client.WebTarget;
import javax.ws.rs.core.Response;

import org.glassfish.grizzly.http.server.HttpServer;
import org.junit.After;
import org.junit.Before;
import org.junit.Test;

import com.google.gson.Gson;
import com.thoughtworks.xstream.XStream;

import br.com.dextra.loja.modelo.Carrinho;
import br.com.dextra.loja.modelo.Produto;
import junit.framework.Assert;

public class ClientTest {
	private HttpServer server;
	
	@Before
	public void inicializaServidor(){
		this.server = Servidor.inicializaServidor();
	}
	@After
	public void paraServidor(){
		server.stop();
	}
	
	@Test
	public void testaQueAConexaoComOServidorFunciona() {
		Client client = ClientBuilder.newClient();
		//WebTarget target = client.target("http://www.mocky.io");
		//String conteudo = target.path("v2/54eb56c0fab2e6f405edbaab").request().get(String.class);

		WebTarget target = client.target("http://localhost:8080");
		String conteudo = target.path("/carrinhos").path("1").request().get(String.class);
		
		//Código abaixo usado para XML
		Carrinho carrinho = (Carrinho) new XStream().fromXML(conteudo);
		
		//Código abaixo utilizado para JSon
		//Carrinho carrinho = new Gson().fromJson(conteudo, Carrinho.class);
		
		Assert.assertEquals("Polo de Tecnologia", carrinho.getRua());
		
		System.out.println(conteudo);
		
		
	}
	
	@Test
	public void testaCriacaoNovoCarrinho(){
		Client client = ClientBuilder.newClient();
		WebTarget target = client.target("http://localhost:8080");
		Carrinho carrinho = new Carrinho();
		Produto produto = new Produto(3,"Cerveja",3.5,1);
		
		carrinho.adiciona(produto);
		carrinho.setCidade("Campinas");
		carrinho.setId(2);
		carrinho.setRua("Polis");
		
		String converteCarrinhoXML = carrinho.toXML();
		
		Entity<String> entity = Entity.entity(converteCarrinhoXML, javax.ws.rs.core.MediaType.APPLICATION_XML);
		
		Response response = target.path("/carrinho").request().post(entity);
		
		//Assert.assertEquals("<status>sucesso</status>", response.readEntity(String.class));
		Assert.assertEquals("", response.readEntity(String.class));
			
		
	}
	
}
