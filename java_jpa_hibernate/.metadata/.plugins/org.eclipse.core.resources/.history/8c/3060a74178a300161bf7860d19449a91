package com.dextraining.service;



import java.util.List;

import javax.persistence.EntityManager;
import javax.persistence.Query;
import javax.persistence.TypedQuery;

import com.dextraining.exception.ValidacaoException;
import com.dextraining.investimento.Investimento;
import com.dextraining.jpa.EntityManagerUtil;


public class InvestimentoService extends GenericService<Investimento> {
	public InvestimentoService(){
		super(Investimento.class);
	}
	
	@Override
	public void salvar(Investimento investimento){
		if(investimento.getDescricao()==null || investimento.getDescricao().isEmpty()){
			throw new ValidacaoException("Descrição não pode estar vazia.");
		}
		if(investimento.getRendimentoMensal()==null){
			throw new ValidacaoException("Rendimento mensal não pode estar vazio");
		}
		if(investimento.getValor()==null){
			throw new ValidacaoException("Valor não pode estar vazio");
		}
		super.salvar(investimento);
	}
	
	public List<Investimento> cosultarTodos(){
		String jsql="";
		jsql += "SELECT i FROM Investimento i ";
		jsql += "ORDER BY i.valor DESC";
		
		EntityManager em = EntityManagerUtil.criarEntityManager();
		
		Query query = em.createQuery(jsql);
		
		return query.getResultList();
		
	}
	
	public List<Investimento> consultarInvestimentoeRendimento(){
		String jsql="";
		jsql+= "SELECT i FROM Investimento i ";
		jsql+= "WHERE i.investimento >= 1000 and i.rendimentoMensal > 25";
		
		EntityManager em = EntityManagerUtil.criarEntityManager();
		
		TypedQuery<Investimento> query = em.createQuery(jsql,Investimento.class);
		
		return query.getResultList();
		
	}
	
	public List<Investimento> consultarPorValor(String descricao){
		String jsql="";
		jsql+="SELECT i FROM Investimento i ";
		jsql+="WHERE i.descricao like %:descricao%";
		
		EntityManager em = EntityManagerUtil.criarEntityManager();
		Query query = em.createQuery(jsql);
		query.setParameter("descricao", descricao);
		
		return query.getResultList();
		
	}


}
